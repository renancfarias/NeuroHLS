// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_promoted22,
        p_promoted20,
        p_promoted18,
        p_promoted16,
        p_promoted14,
        p_promoted12,
        p_promoted10,
        p_promoted8,
        p_promoted6,
        p_promoted,
        out1_dout,
        out1_empty_n,
        out1_read,
        add_ln74_out,
        add_ln74_out_ap_vld,
        add_ln74_128_out,
        add_ln74_128_out_ap_vld,
        add_ln74_129_out,
        add_ln74_129_out_ap_vld,
        add_ln74_130_out,
        add_ln74_130_out_ap_vld,
        add_ln74_131_out,
        add_ln74_131_out_ap_vld,
        add_ln74_132_out,
        add_ln74_132_out_ap_vld,
        add_ln74_133_out,
        add_ln74_133_out_ap_vld,
        add_ln74_134_out,
        add_ln74_134_out_ap_vld,
        add_ln74_135_out,
        add_ln74_135_out_ap_vld,
        add_ln74_136_out,
        add_ln74_136_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] p_promoted22;
input  [8:0] p_promoted20;
input  [8:0] p_promoted18;
input  [8:0] p_promoted16;
input  [8:0] p_promoted14;
input  [8:0] p_promoted12;
input  [8:0] p_promoted10;
input  [8:0] p_promoted8;
input  [8:0] p_promoted6;
input  [8:0] p_promoted;
input  [9:0] out1_dout;
input   out1_empty_n;
output   out1_read;
output  [15:0] add_ln74_out;
output   add_ln74_out_ap_vld;
output  [15:0] add_ln74_128_out;
output   add_ln74_128_out_ap_vld;
output  [15:0] add_ln74_129_out;
output   add_ln74_129_out_ap_vld;
output  [15:0] add_ln74_130_out;
output   add_ln74_130_out_ap_vld;
output  [15:0] add_ln74_131_out;
output   add_ln74_131_out_ap_vld;
output  [15:0] add_ln74_132_out;
output   add_ln74_132_out_ap_vld;
output  [15:0] add_ln74_133_out;
output   add_ln74_133_out_ap_vld;
output  [15:0] add_ln74_134_out;
output   add_ln74_134_out_ap_vld;
output  [15:0] add_ln74_135_out;
output   add_ln74_135_out_ap_vld;
output  [15:0] add_ln74_136_out;
output   add_ln74_136_out_ap_vld;

reg ap_idle;
reg out1_read;
reg add_ln74_out_ap_vld;
reg add_ln74_128_out_ap_vld;
reg add_ln74_129_out_ap_vld;
reg add_ln74_130_out_ap_vld;
reg add_ln74_131_out_ap_vld;
reg add_ln74_132_out_ap_vld;
reg add_ln74_133_out_ap_vld;
reg add_ln74_134_out_ap_vld;
reg add_ln74_135_out_ap_vld;
reg add_ln74_136_out_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [0:0] tmp_s_nbreadreq_fu_202_p3;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [6:0] weights_1_0_address0;
wire   [11:0] weights_1_0_q0;
wire   [6:0] weights_1_1_address0;
wire   [11:0] weights_1_1_q0;
wire   [6:0] weights_1_2_address0;
wire   [11:0] weights_1_2_q0;
wire   [6:0] weights_1_3_address0;
wire   [11:0] weights_1_3_q0;
wire   [6:0] weights_1_4_address0;
wire   [11:0] weights_1_4_q0;
wire   [6:0] weights_1_5_address0;
wire   [11:0] weights_1_5_q0;
wire   [6:0] weights_1_6_address0;
wire   [11:0] weights_1_6_q0;
wire   [6:0] weights_1_7_address0;
wire   [11:0] weights_1_7_q0;
wire   [6:0] weights_1_8_address0;
wire   [11:0] weights_1_8_q0;
wire   [6:0] weights_1_9_address0;
wire   [11:0] weights_1_9_q0;
reg    out1_blk_n;
wire    ap_block_pp0_stage0_grp1;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_subdone;
reg   [9:0] out1_read_reg_763;
reg    ap_block_pp0_stage0_11001_grp1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_s_reg_818;
reg   [11:0] weights_1_0_load_reg_822;
reg   [11:0] weights_1_1_load_reg_827;
reg   [11:0] weights_1_2_load_reg_832;
reg   [11:0] weights_1_3_load_reg_837;
reg   [11:0] weights_1_4_load_reg_842;
reg   [11:0] weights_1_5_load_reg_847;
reg   [11:0] weights_1_6_load_reg_852;
reg   [11:0] weights_1_7_load_reg_857;
reg   [11:0] weights_1_8_load_reg_862;
reg   [11:0] weights_1_9_load_reg_867;
wire   [63:0] idxprom39_fu_500_p1;
wire    ap_block_pp0_stage1;
reg   [15:0] conv_i_i185_fu_96;
wire   [15:0] add_ln74_fu_546_p2;
wire  signed [15:0] p_promoted_cast_fu_410_p1;
wire    ap_loop_init;
reg   [15:0] conv_i_i18_17_fu_100;
wire   [15:0] add_ln74_128_fu_556_p2;
wire  signed [15:0] p_promoted6_cast_fu_414_p1;
reg   [15:0] conv_i_i18_29_fu_104;
wire   [15:0] add_ln74_129_fu_566_p2;
wire  signed [15:0] p_promoted8_cast_fu_418_p1;
reg   [15:0] conv_i_i18_311_fu_108;
wire   [15:0] add_ln74_130_fu_576_p2;
wire  signed [15:0] p_promoted10_cast_fu_422_p1;
reg   [15:0] conv_i_i18_413_fu_112;
wire   [15:0] add_ln74_131_fu_586_p2;
wire  signed [15:0] p_promoted12_cast_fu_426_p1;
reg   [15:0] conv_i_i18_515_fu_116;
wire   [15:0] add_ln74_132_fu_596_p2;
wire  signed [15:0] p_promoted14_cast_fu_430_p1;
reg   [15:0] conv_i_i18_617_fu_120;
wire   [15:0] add_ln74_133_fu_606_p2;
wire  signed [15:0] p_promoted16_cast_fu_434_p1;
reg   [15:0] conv_i_i18_719_fu_124;
wire   [15:0] add_ln74_134_fu_616_p2;
wire  signed [15:0] p_promoted18_cast_fu_438_p1;
reg   [15:0] conv_i_i18_821_fu_128;
wire   [15:0] add_ln74_135_fu_626_p2;
wire  signed [15:0] p_promoted20_cast_fu_442_p1;
reg   [15:0] conv_i_i18_923_fu_132;
wire   [15:0] add_ln74_136_fu_636_p2;
wire  signed [15:0] p_promoted22_cast_fu_446_p1;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage1_01001;
reg    weights_1_0_ce0_local;
reg    weights_1_1_ce0_local;
reg    weights_1_2_ce0_local;
reg    weights_1_3_ce0_local;
reg    weights_1_4_ce0_local;
reg    weights_1_5_ce0_local;
reg    weights_1_6_ce0_local;
reg    weights_1_7_ce0_local;
reg    weights_1_8_ce0_local;
reg    weights_1_9_ce0_local;
wire    ap_block_pp0_stage0_grp0;
wire  signed [15:0] sext_ln74_fu_543_p1;
wire  signed [15:0] sext_ln74_128_fu_553_p1;
wire  signed [15:0] sext_ln74_129_fu_563_p1;
wire  signed [15:0] sext_ln74_130_fu_573_p1;
wire  signed [15:0] sext_ln74_131_fu_583_p1;
wire  signed [15:0] sext_ln74_132_fu_593_p1;
wire  signed [15:0] sext_ln74_133_fu_603_p1;
wire  signed [15:0] sext_ln74_134_fu_613_p1;
wire  signed [15:0] sext_ln74_135_fu_623_p1;
wire  signed [15:0] sext_ln74_136_fu_633_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 conv_i_i185_fu_96 = 16'd0;
#0 conv_i_i18_17_fu_100 = 16'd0;
#0 conv_i_i18_29_fu_104 = 16'd0;
#0 conv_i_i18_311_fu_108 = 16'd0;
#0 conv_i_i18_413_fu_112 = 16'd0;
#0 conv_i_i18_515_fu_116 = 16'd0;
#0 conv_i_i18_617_fu_120 = 16'd0;
#0 conv_i_i18_719_fu_124 = 16'd0;
#0 conv_i_i18_821_fu_128 = 16'd0;
#0 conv_i_i18_923_fu_132 = 16'd0;
#0 ap_done_reg = 1'b0;
end

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_0_cfu #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_0_address0),
    .ce0(weights_1_0_ce0_local),
    .q0(weights_1_0_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_1_cgu #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_1_address0),
    .ce0(weights_1_1_ce0_local),
    .q0(weights_1_1_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_2_chv #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_2_address0),
    .ce0(weights_1_2_ce0_local),
    .q0(weights_1_2_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_3_civ #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_3_address0),
    .ce0(weights_1_3_ce0_local),
    .q0(weights_1_3_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_4_cjv #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_4_address0),
    .ce0(weights_1_4_ce0_local),
    .q0(weights_1_4_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_5_ckv #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_5_address0),
    .ce0(weights_1_5_ce0_local),
    .q0(weights_1_5_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_6_clv #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_6_address0),
    .ce0(weights_1_6_ce0_local),
    .q0(weights_1_6_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_7_cmv #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_7_address0),
    .ce0(weights_1_7_ce0_local),
    .q0(weights_1_7_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_8_cnw #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_8_address0),
    .ce0(weights_1_8_ce0_local),
    .q0(weights_1_8_q0)
);

snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate_weights_1_9_cow #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
weights_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_1_9_address0),
    .ce0(weights_1_9_ce0_local),
    .q0(weights_1_9_q0)
);

snn_mnist_hls_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
                ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
        if (((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage1_11001)) begin
            ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i185_fu_96 <= p_promoted_cast_fu_410_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i185_fu_96 <= add_ln74_fu_546_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_17_fu_100 <= p_promoted6_cast_fu_414_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_17_fu_100 <= add_ln74_128_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_29_fu_104 <= p_promoted8_cast_fu_418_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_29_fu_104 <= add_ln74_129_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_311_fu_108 <= p_promoted10_cast_fu_422_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_311_fu_108 <= add_ln74_130_fu_576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_413_fu_112 <= p_promoted12_cast_fu_426_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_413_fu_112 <= add_ln74_131_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_515_fu_116 <= p_promoted14_cast_fu_430_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_515_fu_116 <= add_ln74_132_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_617_fu_120 <= p_promoted16_cast_fu_434_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_617_fu_120 <= add_ln74_133_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_719_fu_124 <= p_promoted18_cast_fu_438_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_719_fu_124 <= add_ln74_134_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_821_fu_128 <= p_promoted20_cast_fu_442_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_821_fu_128 <= add_ln74_135_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv_i_i18_923_fu_132 <= p_promoted22_cast_fu_446_p1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        conv_i_i18_923_fu_132 <= add_ln74_136_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out1_read_reg_763 <= out1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_s_reg_818 <= tmp_s_nbreadreq_fu_202_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights_1_0_load_reg_822 <= weights_1_0_q0;
        weights_1_1_load_reg_827 <= weights_1_1_q0;
        weights_1_2_load_reg_832 <= weights_1_2_q0;
        weights_1_3_load_reg_837 <= weights_1_3_q0;
        weights_1_4_load_reg_842 <= weights_1_4_q0;
        weights_1_5_load_reg_847 <= weights_1_5_q0;
        weights_1_6_load_reg_852 <= weights_1_6_q0;
        weights_1_7_load_reg_857 <= weights_1_7_q0;
        weights_1_8_load_reg_862 <= weights_1_8_q0;
        weights_1_9_load_reg_867 <= weights_1_9_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_128_out_ap_vld = 1'b1;
    end else begin
        add_ln74_128_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_129_out_ap_vld = 1'b1;
    end else begin
        add_ln74_129_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_130_out_ap_vld = 1'b1;
    end else begin
        add_ln74_130_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_131_out_ap_vld = 1'b1;
    end else begin
        add_ln74_131_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_132_out_ap_vld = 1'b1;
    end else begin
        add_ln74_132_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_133_out_ap_vld = 1'b1;
    end else begin
        add_ln74_133_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_134_out_ap_vld = 1'b1;
    end else begin
        add_ln74_134_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_135_out_ap_vld = 1'b1;
    end else begin
        add_ln74_135_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_136_out_ap_vld = 1'b1;
    end else begin
        add_ln74_136_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (tmp_s_reg_818 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln74_out_ap_vld = 1'b1;
    end else begin
        add_ln74_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_nbreadreq_fu_202_p3 == 1'd0) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out1_blk_n = out1_empty_n;
    end else begin
        out1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        out1_read = 1'b1;
    end else begin
        out1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_0_ce0_local = 1'b1;
    end else begin
        weights_1_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_1_ce0_local = 1'b1;
    end else begin
        weights_1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_2_ce0_local = 1'b1;
    end else begin
        weights_1_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_3_ce0_local = 1'b1;
    end else begin
        weights_1_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_4_ce0_local = 1'b1;
    end else begin
        weights_1_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_5_ce0_local = 1'b1;
    end else begin
        weights_1_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_6_ce0_local = 1'b1;
    end else begin
        weights_1_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_7_ce0_local = 1'b1;
    end else begin
        weights_1_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_8_ce0_local = 1'b1;
    end else begin
        weights_1_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_1_9_ce0_local = 1'b1;
    end else begin
        weights_1_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_128_fu_556_p2 = ($signed(sext_ln74_128_fu_553_p1) + $signed(conv_i_i18_17_fu_100));

assign add_ln74_128_out = ($signed(sext_ln74_128_fu_553_p1) + $signed(conv_i_i18_17_fu_100));

assign add_ln74_129_fu_566_p2 = ($signed(sext_ln74_129_fu_563_p1) + $signed(conv_i_i18_29_fu_104));

assign add_ln74_129_out = ($signed(sext_ln74_129_fu_563_p1) + $signed(conv_i_i18_29_fu_104));

assign add_ln74_130_fu_576_p2 = ($signed(sext_ln74_130_fu_573_p1) + $signed(conv_i_i18_311_fu_108));

assign add_ln74_130_out = ($signed(sext_ln74_130_fu_573_p1) + $signed(conv_i_i18_311_fu_108));

assign add_ln74_131_fu_586_p2 = ($signed(sext_ln74_131_fu_583_p1) + $signed(conv_i_i18_413_fu_112));

assign add_ln74_131_out = ($signed(sext_ln74_131_fu_583_p1) + $signed(conv_i_i18_413_fu_112));

assign add_ln74_132_fu_596_p2 = ($signed(sext_ln74_132_fu_593_p1) + $signed(conv_i_i18_515_fu_116));

assign add_ln74_132_out = ($signed(sext_ln74_132_fu_593_p1) + $signed(conv_i_i18_515_fu_116));

assign add_ln74_133_fu_606_p2 = ($signed(sext_ln74_133_fu_603_p1) + $signed(conv_i_i18_617_fu_120));

assign add_ln74_133_out = ($signed(sext_ln74_133_fu_603_p1) + $signed(conv_i_i18_617_fu_120));

assign add_ln74_134_fu_616_p2 = ($signed(sext_ln74_134_fu_613_p1) + $signed(conv_i_i18_719_fu_124));

assign add_ln74_134_out = ($signed(sext_ln74_134_fu_613_p1) + $signed(conv_i_i18_719_fu_124));

assign add_ln74_135_fu_626_p2 = ($signed(sext_ln74_135_fu_623_p1) + $signed(conv_i_i18_821_fu_128));

assign add_ln74_135_out = ($signed(sext_ln74_135_fu_623_p1) + $signed(conv_i_i18_821_fu_128));

assign add_ln74_136_fu_636_p2 = ($signed(sext_ln74_136_fu_633_p1) + $signed(conv_i_i18_923_fu_132));

assign add_ln74_136_out = ($signed(sext_ln74_136_fu_633_p1) + $signed(conv_i_i18_923_fu_132));

assign add_ln74_fu_546_p2 = ($signed(sext_ln74_fu_543_p1) + $signed(conv_i_i185_fu_96));

assign add_ln74_out = ($signed(sext_ln74_fu_543_p1) + $signed(conv_i_i185_fu_96));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((out1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((out1_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_ready = ap_ready_sig;

assign idxprom39_fu_500_p1 = out1_read_reg_763;

assign p_promoted10_cast_fu_422_p1 = $signed(p_promoted10);

assign p_promoted12_cast_fu_426_p1 = $signed(p_promoted12);

assign p_promoted14_cast_fu_430_p1 = $signed(p_promoted14);

assign p_promoted16_cast_fu_434_p1 = $signed(p_promoted16);

assign p_promoted18_cast_fu_438_p1 = $signed(p_promoted18);

assign p_promoted20_cast_fu_442_p1 = $signed(p_promoted20);

assign p_promoted22_cast_fu_446_p1 = $signed(p_promoted22);

assign p_promoted6_cast_fu_414_p1 = $signed(p_promoted6);

assign p_promoted8_cast_fu_418_p1 = $signed(p_promoted8);

assign p_promoted_cast_fu_410_p1 = $signed(p_promoted);

assign sext_ln74_128_fu_553_p1 = $signed(weights_1_1_load_reg_827);

assign sext_ln74_129_fu_563_p1 = $signed(weights_1_2_load_reg_832);

assign sext_ln74_130_fu_573_p1 = $signed(weights_1_3_load_reg_837);

assign sext_ln74_131_fu_583_p1 = $signed(weights_1_4_load_reg_842);

assign sext_ln74_132_fu_593_p1 = $signed(weights_1_5_load_reg_847);

assign sext_ln74_133_fu_603_p1 = $signed(weights_1_6_load_reg_852);

assign sext_ln74_134_fu_613_p1 = $signed(weights_1_7_load_reg_857);

assign sext_ln74_135_fu_623_p1 = $signed(weights_1_8_load_reg_862);

assign sext_ln74_136_fu_633_p1 = $signed(weights_1_9_load_reg_867);

assign sext_ln74_fu_543_p1 = $signed(weights_1_0_load_reg_822);

assign tmp_s_nbreadreq_fu_202_p3 = out1_empty_n;

assign weights_1_0_address0 = idxprom39_fu_500_p1;

assign weights_1_1_address0 = idxprom39_fu_500_p1;

assign weights_1_2_address0 = idxprom39_fu_500_p1;

assign weights_1_3_address0 = idxprom39_fu_500_p1;

assign weights_1_4_address0 = idxprom39_fu_500_p1;

assign weights_1_5_address0 = idxprom39_fu_500_p1;

assign weights_1_6_address0 = idxprom39_fu_500_p1;

assign weights_1_7_address0 = idxprom39_fu_500_p1;

assign weights_1_8_address0 = idxprom39_fu_500_p1;

assign weights_1_9_address0 = idxprom39_fu_500_p1;

endmodule //snn_mnist_hls_lif_layer_10_128_stream_stream_ap_uint_10_0_1_Pipeline_integrate
